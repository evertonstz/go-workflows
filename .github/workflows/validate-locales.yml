---
name: Validate Locale Files

"on":
  pull_request:
    paths:
      - "locales/*.json"
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  validate-locales:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed locale files
        id: changed-locales
        uses: tj-actions/changed-files@v44
        with:
          files: "locales/*.json"

      - name: Convert file list to comma-separated
        if: steps.changed-locales.outputs.any_changed == 'true'
        id: file-list
        run: |
          # Convert space-separated list to comma-separated, excluding schema.json
          files="${{ steps.changed-locales.outputs.all_changed_files }}"
          # Filter out schema.json since it's not a locale file
          filtered_files=""
          for file in $files; do
            if [[ "$file" != *"schema.json" ]]; then
              if [[ -z "$filtered_files" ]]; then
                filtered_files="$file"
              else
                filtered_files="$filtered_files,$file"
              fi
            fi
          done
          echo "files=$filtered_files" >> $GITHUB_OUTPUT
          echo "Locale files to validate: $filtered_files"

      - name: Validate JSON syntax and schema
        if: steps.changed-locales.outputs.any_changed == 'true' && steps.file-list.outputs.files != ''
        uses: docker://orrosenblatt/validate-json-action:latest
        env:
          INPUT_SCHEMA: locales/schema.json
          INPUT_JSONS: ${{ steps.file-list.outputs.files }}

      - name: Validate schema.json syntax
        if: steps.changed-locales.outputs.any_changed == 'true'
        run: |
          # Check if schema.json was changed and validate its syntax
          if echo "${{ steps.changed-locales.outputs.all_changed_files }}" | grep -q "schema.json"; then
            echo "Validating schema.json syntax..."
            if ! jq empty locales/schema.json > /dev/null 2>&1; then
              echo "❌ Invalid JSON syntax in locales/schema.json"
              exit 1
            fi
            echo "✅ Valid JSON syntax in locales/schema.json"
          fi
