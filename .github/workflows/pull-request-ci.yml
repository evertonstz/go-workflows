name: Pull Request CI

on:
  pull_request:
    branches: ["main"]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Check formatting with goimports
        run: |
          if [ "$(goimports -local github.com/evertonstz/go-workflows -l . | wc -l)" -gt 0 ]; then
            echo "Code is not formatted correctly. Please run 'make format'"
            echo "Files that need formatting:"
            goimports -local github.com/evertonstz/go-workflows -l .
            exit 1
          fi
          echo "Code formatting is correct ✓"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Install dependencies
        run: go mod download

      - name: Run unit tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Run teatest integration tests
        run: go test -v -run "TestApp" .

      - name: Verify golden files are up to date
        run: |
          echo "Verifying golden files are current..."
          # Save current golden files for comparison
          cp -r testdata/ testdata-backup/ || true
          
          # Run the golden file test with -update to check if files need updating
          go test -v -run "TestApp_FullOutput" . -update
          
          # Check if any files were modified
          if [ -n "$(git status --porcelain testdata/)" ]; then
            echo "❌ Golden files are out of date!"
            echo "Modified files:"
            git status --porcelain testdata/
            echo ""
            echo "Detailed differences:"
            for file in testdata/*.golden; do
              if [ -f "testdata-backup/$(basename $file)" ]; then
                echo "=== Diff for $(basename $file) ==="
                diff -u "testdata-backup/$(basename $file)" "$file" || true
                echo ""
              fi
            done
            echo ""
            echo "This could be due to:"
            echo "1. UI changes that need golden file updates"
            echo "2. Environment differences (terminal capabilities, etc.)"
            echo ""
            echo "To fix this:"
            echo "1. Run 'make test-integration-update' locally"
            echo "2. Review the changes in testdata/"
            echo "3. If changes are expected, commit them"
            echo "4. If changes are unexpected, investigate the UI logic"
            echo ""
            echo "Current environment info:"
            echo "TERM: $TERM"
            echo "COLORTERM: $COLORTERM"
            echo "CI: $CI"
            exit 1
          fi
          echo "✅ Golden files are up to date"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build
    needs: [lint, test] # Ensure tests pass before building
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Build
        run: go build -ldflags "-X main.Version=ci-${{ github.sha }}" .
